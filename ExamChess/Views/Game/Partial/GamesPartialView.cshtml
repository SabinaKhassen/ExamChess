@model List<ExamChess.ViewModels.GameViewModel>

@{
    List<ExamChess.ViewModels.CityViewModel> users = (List<ExamChess.ViewModels.CityViewModel>)ViewData["users"];
}

<table class="table">
    <thead>
        <tr>
            <th scope="col">PlayerTwo</th>
        </tr>
    </thead>
    <tbody>
        @*@foreach (var item in Model)
        {
            var city = cities.Where(c => c.Id == item.CityId).FirstOrDefault();
            var country = countries.Where(c => c.Id == city.CountryId).FirstOrDefault();
            var role = roles.Where(r => r.Id == item.RoleId).FirstOrDefault().Status;
            var cityCountry = city.Name + "-" + country.Name;
            <tr>
                <td scope="row">@item.FIO</td>
                <td scope="row">@item.Email</td>
                <td scope="row">@item.Nick</td>
                <td scope="row">@cityCountry</td>
                <td scope="row">@role</td>
                @if (item.Blocked)
                {
                    <td scope="row">@Ajax.ActionLink("Unblock", "Block", "Admin", new { id = @item.Id, block = false }, new AjaxOptions() { UpdateTargetId = "list", HttpMethod = "POST" })</td>
                }
                else
                {
                    <td scope="row">@Ajax.ActionLink("Block", "Block", "Admin", new { id = @item.Id, block = true }, new AjaxOptions() { UpdateTargetId = "list", HttpMethod = "POST" })</td>
                }
                <td scope="row"><a onclick="EditButton(@item.Id)">Edit user</a></td>
                <td scope="row">@Ajax.ActionLink("Delete", "Delete", "Admin", new { id = @item.Id }, new AjaxOptions() { UpdateTargetId = "list", HttpMethod = "POST" })</td>
            </tr>
        }*@
    </tbody>
</table>
